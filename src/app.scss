/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
html,
body {
  height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}
/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
  9. Create a root stacking context
*/
#app {
  isolation: isolate;
}

:root {
  --gutter-width: 16px;
  --main-color-deg: 280deg;

  --main-50: hsl(var(--main-color-deg) 100% 95%);
  --main-100: hsl(var(--main-color-deg) 100% 5%);
  --main-200: hsl(var(--main-color-deg) 90% 70%);
  --main-500: hsl(var(--main-color-deg) 50% 50%);
  --main-600: hsl(var(--main-color-deg) 70% 40%);
  --main-700: hsl(var(--main-color-deg) 80% 20%);
  --main-800: hsl(var(--main-color-deg) 80% 15%);
  --main-900: hsl(var(--main-color-deg) 100% 10%);
  --main-black: hsl(var(--main-color-deg) 100% 5%);

  @media (min-width: 700px) {
    --gutter-width: 32px;
  }

  font-size: 1.25rem;
}

h1,
h2,
h3 {
  color: var(--main-200);
  line-height: 1.3;
}

h1 {
  font-size: clamp(2rem, 1rem + 5vw, 4rem);
  text-align: center;
}

h2 {
  font-size: clamp(1.85rem, 1rem + 5vw, 3rem);
}

h3 {
  font-size: clamp(1.55rem, 1rem + 3vw, 2.15rem);
}

button {
  border: none;
  background-color: var(--main-600);
  padding: 8px;
  border-radius: 4px;
  cursor: pointer;
  color: var(--main-50);
}

article {
  display: grid;
  grid-template-columns: 1fr min(70ch, 100%) 1fr;
  padding: 32px var(--gutter-width);
  justify-content: center;

  & > * {
    grid-column: 2;
  }

  & > .full-bleed {
    grid-column: 1 / -1;
  }

  & > .full-bleed-gutter {
    grid-column: 1 / -1;
    margin-left: calc(var(--gutter-width) * -1);
    margin-right: calc(var(--gutter-width) * -1);
  }

  & > pre {
    background-color: var(--main-800);
    padding: 16px;
    border-radius: 8px;
    font-size: 1.25rem;
    white-space: pre-wrap;
  }

  & > * + * {
    margin-top: 1.15rem;
  }

  & > blockquote {
    background-color: var(--main-800);
    border-left: solid 4px var(--main-200);
    padding: 1rem 0 1rem 12px;
    border-radius: 0 8px 8px 0;

    & code {
      background-color: var(--main-600);
      padding: 3px 6px;
      margin-right: 4px;
      border-radius: 4px;
    }
  }

  & > p > code {
    background-color: var(--main-700);
    padding: 3px 6px;
    margin-right: 4px;
    border-radius: 4px;
  }

  code:not(:first-child) {
    margin-left: 4px;
  }

  & > img {
    justify-self: center;
  }

  & li {
    margin-bottom: 0.75rem;
  }

  & li::marker {
    color: var(--main-200);
  }

  & a {
    color: var(--main-200);
    text-decoration: none;
  }
}

.grid-child {
  border: solid currentColor 4px;
  padding: 4px;
  background-color: hsla(var(--color-deg), 100%, 40%, 0.3);
  color: hsl(var(--color-deg) 100% 60%);
  display: grid;
  place-items: center;
  font-size: 3rem;
  grid-template-areas: "single";
}
